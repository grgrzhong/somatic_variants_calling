#!/bin/bash
#############################################################################
# Somatic Mutation Workflow - Annovar Annotation Script
# This script performs Annovar annotation on the VCF files generated by Mutect2.
#############################################################################

# function to annotate a single sample
annovar_annotation() {
    
    local tumour_id=$1

    # Annotate variant by Annovar
    echo "$(date +"%F") $(date +"%T") - (${tumour_id}) Annotating variants with Annovar ..."
    
    singularity exec \
        --bind "${PROJECT_DIR}:${PROJECT_DIR}" \
        --bind "${MUTECT2_DIR}:${MUTECT2_DIR}" \
        --bind "${REFERENCE_DIR}:${REFERENCE_DIR}" \
        --bind /tmp:/tmp \
        "${CONTAINER_DIR}/annovar.sif" \
    perl "${REFERENCE_DIR}/annovar/table_annovar.pl" \
        "${output_dir}/${tumour_id}.final.vcf.gz" \
        "${REFERENCE_DIR}/annovar/humandb/" \
        -buildver hg38 \
        -out "${output_dir}/${tumour_id}" \
        -remove \
        -protocol refGene,cytoBand,dbnsfp33a,gnomad_exome,avsnp150,clinvar_20221231,cosmic70 \
        -operation gx,r,f,f,f,f,f \
        -nastring . \
        -polish \
        -xreffile "${REFERENCE_DIR}/annovar/example/gene_fullxref.txt" \
        --otherinfo \
        --vcfinput \
        >& "${output_dir}/${tumour_id}.annovar.log"

    if [[ $? -ne 0 ]]; then
        echo "ERROR: Annovar failed for ${tumour_id}" >&2
        return 1
    fi

    # Extract relevant columns from the Annovar output
    less -S "${output_dir}/${tumour_id}.hg38_multianno.txt" |
        awk 'BEGIN {FS=OFS="\t"} NR==1 {print $0, "AD", "AF", "DP"}; NR >1 {split($NF, a, ":"); $(NF+1)=a[2]; $(NF+1)=a[3]; $(NF+1)=a[4]; print}' > \
            "${output_dir}/${tumour_id}.annovar.txt"

    echo "$(date +"%F")" "$(date +"%T")" "Completed mutect2 variant calling  sample = $tumour_id"
}